#!@BASH_PATH@
#
# Copyright (c) 2007-2008 Brian Koropoff
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the Moonunit project nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY BRIAN KOROPOFF ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL BRIAN KOROPOFF BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

dir=`dirname $0`
if [ -z "$dir" ]
then
    moonunit="moonunit"
else
    moonunit="$dir/moonunit"
fi

tempdir="/tmp/moonunit-lt.${PPID}"
mkdir -p "$tempdir"

libtool --config > "$tempdir/ltconfig"
objdir=`(source "$tempdir/ltconfig" && echo $objdir)`

arg=$1
while [ -n "$arg" ]
do
    shift
    case "$arg" in
        --help|'-?')
            name=`basename $0`
            cat << __EOF__
$name -- libtool support wrapper for MoonUnit

  This script allows uninstalled libtool archive (.la) files to be run directly
  in MoonUnit (e.g. as part of 'make check' in a build tree).  Any referenced
  .la files will be relinked/redirected as necessary before passing control to
  moonunit.  Any sort of library -- static, shared, or loadable module -- should
  work.

Options ($name-specific):
  --plugin module.la          Allow loading of module.la as a MoonUnit plugin
  --wrap <prefix>             Prefixes the invocation of moonunit with <prefix>
                              (e.g. "gdb --args")

__EOF__
            command=("${command[@]}" "$arg")
            ;;
        --wrap)
            wrap="$1"
            shift
            ;;
        --plugin)
            dlopens=("${dlopens[@]}" -dlopen "$1")
	    extra_plugins="$extra_plugins $(basename "$1" | sed 's/\.la/@moduleext@/')"
            shift
            ;;
        *.la)
            # Check if a compiled dynamic module already exists
            module_file="$(dirname "$arg")/$objdir/$(basename "$arg" | sed "s/\.la$/@moduleext@/")" 
            if [ -e "${module_file}" ]
            then
                # Just use the module directly, and add a -dlopen directive so libtool will
                # set the library path correctly
                dlopens=("${dlopens[@]}" -dlopen "$arg")
                command=("${command[@]}" "${module_file}")
            else
                # We have to relink the library into a module
                relink_name=`basename "$arg"`
                so_name=`echo "$relink_name" | sed 's/\.la$/@moduleext@/'`
                # Relink into a module
                libtool --mode=link ${CC:-cc} -shared -avoid-version -export-dynamic -module -o "$tempdir/$relink_name" -rpath "$tempdir" "$arg" >/dev/null 2>&1
                # Add it to the command
                dlopens=("${dlopens[@]}" -dlopen "$tempdir/$relink_name")
                command=("${command[@]}" "$tempdir/$objdir/$so_name")
            fi
            ;;
         *)
            command=("${command[@]}" "$arg")
            ;;
    esac
    arg=$1
done   

MU_EXTRA_PLUGINS="$extra_plugins" libtool --mode=execute "${dlopens[@]}" $wrap $moonunit "${command[@]}"
rc=$?
rm -rf ${tempdir}
exit "$rc"

