AC_INIT([moonunit],[0.3],[bkoropoff __at__ gmail_com])
AM_INIT_AUTOMAKE([-Wall -Werror foreign])

AC_CONFIG_HEADERS(include/config.h)

AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LIBTOOL

AC_CHECK_SIZEOF(void*)

WANT_LIBELF=yes

AC_ARG_ENABLE([debug],
	[AS_HELP_STRING([--enable-debug],
		[enable debugging])],
	[
		AC_DEFINE([DEBUG], [], [Debugging enabled])
		CFLAGS="$CFLAGS -O0 -g"
	],
	[])

AC_ARG_WITH([libelf],
	[AS_HELP_STRING([--with-libelf=<dir>],
		[use libelf located in <dir> to scan libraries for unit tests, or 'no' to disable])],
	[
		if test x"$withval" = x"no"
		then
			WANT_LIBELF=no
			LIBELF_INCLUDES=
	 		LIBELF_LDFLAGS=
	 	elif test x"$withval" = x"yes"
	 	then
	 		WANT_LIBELF=yes
	 		LIBELF_INCLUDES=
	 		LIBELF_LDFLAGS=
	 	else
			LIBELF_INCLUDES="-I$withval/include"
	 		LIBELF_LDFLAGS="-L$withval/lib",
	 	fi
	],
	[
		LIBELF_INCLUDES=
	 	LIBELF_LDFLAGS=
	])

AC_ARG_WITH([popt],
	[AS_HELP_STRING([--with-libelf=<dir>],
		[use popt located in <dir> to parse command line arguments])],
	[
		POPT_INCLUDES="-I$withval/include"
		POPT_LDFLAGS="-L$withval/lib",
	],
	[
		POPT_INCLUDES=
	 	POPT_LDFLAGS=
	])


plugindir="${libdir}/moonunit"
pluginext=".so"

AC_SUBST(plugindir)
AC_SUBST(pluginext)

saved_LDFLAGS=$LDFLAGS
saved_CPPFLAGS=$CPPFLAGS

LDFLAGS="$LDFLAGS $LIBELF_LDFLAGS"
CPPFLAGS="$CPPFLAGS $LIBELF_INCLUDES"

if test x"$WANT_LIBELF" = x"yes"
then
	AC_CHECK_HEADER([libelf.h],[FOUND_LIBELF_H=yes],[FOUND_LIBELF_H=no])
	AC_CHECK_LIB(elf, elf_begin, [FOUND_LIBELF_LIB=yes], [FOUND_LIBELF_LIB=no])

	if test x"$FOUND_LIBELF_H" = x"yes" -a \
    	    x"$FOUND_LIBELF_LIB" = x"yes"
	then
		LIBELF_LIBADD="$LIBELF_LDFLAGS -lelf"
		AC_DEFINE(HAVE_LIBELF, [], [libelf available])
		FOUND_LIBELF=yes
		BACKEND=libelf
	else
		FOUND_LIBELF=no
		BACKEND=none
	fi
else
	FOUND_LIBELF=no
	BACKEND=none
fi

LDFLAGS="$saved_LDFLAGS $POPT_LDFLAGS"
CPPFLAGS="$CPPFLAGS $POPT_INCLUDES"

AC_CHECK_HEADER([popt.h],[FOUND_POPT_H=yes],[FOUND_POPT_H=no])
AC_CHECK_LIB(popt, poptGetContext,[FOUND_POPT_LIB=yes],[FOUND_POPT_LIB=no])

if test x"$FOUND_POPT_H" = x"yes" -a\
   x"$FOUND_POPT_LIB" = x"yes"
then
	POPT_LIBADD="$POPT_LDFLAGS -lpopt"
	FOUND_POPT=yes
else
	FOUND_POPT=no
fi

if test x"$FOUND_POPT" = x"no"
then
	AC_MSG_ERROR([Could not find popt])
fi

AM_CONDITIONAL([HAVE_LIBELF], [test x"$FOUND_LIBELF" = x"yes"])

AC_SUBST(LIBELF_INCLUDES)
AC_SUBST(LIBELF_LIBADD)
AC_SUBST(POPT_INCLUDES)
AC_SUBST(POPT_LIBADD)	

LDFLAGS=$saved_LDFLAGS
CPPFLAGS=$saved_CPPFLAGS

CFLAGS="$CFLAGS -Wall -Werror"
			 
HAVE_DOXYGEN=no
AC_CHECK_PROG([DOXYGEN], [doxygen], [doxygen], [false])
AM_CONDITIONAL([HAVE_DOXYGEN], [test x"$DOXYGEN" != x"false" && HAVE_DOXYGEN=yes])

HAVE_DOCBOOK=no
AC_CHECK_PROG([XSLTPROC], [xsltproc], [xsltproc], [false])

AC_MSG_CHECKING([DocBook XSL stylesheet directory])
DOCBOOK_SEARCH_PATH="/usr/share/xml/docbook/stylesheet/nwalsh"

for path in ${DOCBOOK_SEARCH_PATH}
do
	if test -d "$path"
	then
		DOCBOOK_XSL_DIR="$path"
	fi
done

if test x"${DOCBOOK_XSL_DIR}" = x
then
	AC_MSG_RESULT(not found)
else
	AC_MSG_RESULT($DOCBOOK_XSL_DIR)
fi

AC_SUBST(DOCBOOK_XSL_DIR)
AM_CONDITIONAL([HAVE_DOCBOOK], [test x"$XSLTPROC" != x"false" -a x"$DOCBOOK_XSL_DIR" != x && HAVE_DOCBOOK=yes])

AC_CONFIG_FILES([Makefile src/Makefile src/libmoonunit/Makefile src/moonunit/Makefile
		include/Makefile include/moonunit/Makefile src/libuipc/Makefile
	  	src/moonunit-unix/Makefile src/moonunit-misc/Makefile include/uipc/Makefile
		doc/Makefile doc/Doxyfile doc/docbook-html.xsl doc/docbook-man.xsl])

AC_OUTPUT

echo ""
echo ""
echo "Configuration summary"
echo
echo "Reflection backend:    $BACKEND"
if test x"$BACKEND" = x"none"
then
	echo " -- Warning: reflection-based test loading will"
	echo "    not work without libelf.  Only libraries"
	echo "    compiled with a stub generated by moonunit-stub"
	echo "    will be supported."
fi
echo "DocBook documentation: $HAVE_DOCBOOK"
echo "Doxygen documentation: $HAVE_DOXYGEN"
echo ""
